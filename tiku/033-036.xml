<?xml version="1.0" encoding="gb2312"?>
<PaperSetter checked="true">
    <PaperDetail xml:space="preserve"><PaperVersion>1</PaperVersion><PaperID>1</PaperID><PaperName>1</PaperName><PaperAuthor>1</PaperAuthor><PaperTotalTime unit="hour">3</PaperTotalTime><PaperStartTime zone="+8">1</PaperStartTime><PaperProblemSum>4</PaperProblemSum><PublicKey>MIHxMIGoBgcqhkjOOAQBMIGcAkEA/KaCzo4Syrom78z3EQ5SbbB4sF7ey80etKII864WF64B81uRpH5t9jQTxeEu0ImbzRMqzVDZkVG9xD7nN1kuFwIVAJYu3cw2nLqOuyYO5rahJtk0bjjFAkBnhHGyepz0TukaScUUfbGpqvJE8FpDTWSGkx0tFCcbnjUDC3H9c9oXkGmzLik1Yw4cIGI1TQ2iCmxBblC+eUykA0QAAkEA8ojKBedYrFoDBvrk2cvh998qmKFuHB0gXegkDXzHhk+yUprBGbpdLHVDWq8P7hPLyNPuviEvJoxz4x5kqiidgQ==</PublicKey><Signature>MC4CFQCHOJuiuUDvk/k/WG0PeLBQ8+B7SQIVAIKCYRca5kMPcqnGa7glzQ5vtFI5</Signature><PaperReference><![CDATA[1]]></PaperReference><PaperDescribe><![CDATA[登陆及提交说明<BR>
请不要擅自操作键盘和鼠标，根据现场工作的人员的指示操作。<BR>
<BR>
<BR>
2)试题描述说明<BR>
试题主要是描述了一个问题，并请你用程序来解决这个问题。一般来说，你所编写的程序应该能够接受题目中所描述的数据，按照题目的描述处理这些数据，并且严格按照输出描述(The Output)中所述的格式输出结果。程序将提交到服务器进行打分。打分详情可见‘3)打分说明’部分。<BR>
试题主要分为六部分: <BR>
1.标题<BR>
包括试题的主标题，以及副标题Time Limit部分，Time Limit表示所提交的答题程序所能运行的最长时间，如果超过这个时间，程序无论输出是否正确，都将被裁判端判为Time Limit Exceed。<BR>
比如Time Limit是10 sec(10秒)。如果提交的答题程序运行时间超过10秒，则会被判为Time Limit Exceed，无论答题程序输出是否正确，也就是说在10秒内答题程序输出的结果正确或错误都不会得到任何提示。<BR>
<BR>
2.Descripiton<BR>
题目描述，作为题目的主要部分，对问题进行详细的说明。<BR>
<BR>
3.The Input<BR>
输入描述部分，这部分描述了输入数据及其格式和范围。输入答题程序的数据将严格按照这部分的描述。<BR>
<BR>
4.The Output<BR>
输出描述，这部分描述了答题程序所应该输出的数据及其格式。答题程序必须按照这部分的描述来输出，否则很有可能无法通过裁判端的测试。<BR>
<BR>
5.Sample Input<BR>
输入样例，以实例来说明输入数据的格式。请注意这里的数据只是作为实例，并不代表实际测试答题程序的数据是这些。因此能正确处理Sample中的数据并不代表程序一定能通过。不过，Sample数据一定是实际测试数据的子集，因此不能正确处理Sample就一定无法在裁判端通过。所以没有通过Sample的程序最好不要贸然提交。
<BR>
6.Sample Output<BR>
对应输入样例的输出数据，用来说明答题程序所应输出的格式。答题程序的输出应该严格按照这部分所示输出。比如：<BR>
在Sample Output中有两个整数独占一行，并且以空格分隔，如下：<BR>
2 3<BR>
那么如下的输出都是错误的：<BR>
a=2 b=3<BR>
或<BR>
2       3<BR>
或<BR>
3 2<BR>
必须严格按照Sample Output中所示的格式输出才有可能通过裁判端打分。<BR>
<BR>
3)打分说明<BR>
打分结果	评判标准<BR>
Compile Error	编译错<BR>
Time Limited Exceeded	程序运行超过时间限制<BR>
Run Time Error	程序运行错误<BR>
Wrong Answer	输出结果中关键数据错误<BR>
Presentation Error	格式错<BR>
Accepted	输出结果完全正确<BR>


4)程序编写说明<BR>
1.C/C++<BR>
首先，必须注意程序的main函数需要定义成int型，然后必须return 0。<BR>
其次，如果输入描述(The Output)中没有明确规定输入结束标志或说以EOF结束，那么可以使用如下格式来读入：<BR>
<BR>
while(cin>>a)或while(scanf("%d",&a)==1)<BR>
<BR>
注：这里while(scanf("%d",&a)==1)中的1是输入数据的数量，如果有两个则是：<BR>
while(scanf("%d %d",&a,&b)==2)<BR>
<BR>]]></PaperDescribe></PaperDetail>
    <ProblemList encrypted="0">
        <ProblemArchive version="1.0" checked="true">
            <Title>Problem 33 这个数字用英文怎么说？</Title>
            <Author>朱凯</Author>
            <Problem contentType="html">
                <Description xml:space="preserve">请跟据一个不小于0，且不大于9的整数，给出它的英文名。各个整数的英文名如下
&lt;table&gt;
    &lt;tr&gt;&lt;td&gt;0&lt;/td&gt;&lt;td&gt;Zero&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td&gt;1&lt;/td&gt;&lt;td&gt;One&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td&gt;2&lt;/td&gt;&lt;td&gt;Two&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td&gt;3&lt;/td&gt;&lt;td&gt;Three&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td&gt;4&lt;/td&gt;&lt;td&gt;Four&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td&gt;5&lt;/td&gt;&lt;td&gt;Five&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td&gt;6&lt;/td&gt;&lt;td&gt;Six&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td&gt;7&lt;/td&gt;&lt;td&gt;Seven&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td&gt;8&lt;/td&gt;&lt;td&gt;Eight&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td&gt;9&lt;/td&gt;&lt;td&gt;Nine&lt;/td&gt;&lt;/tr&gt;
&lt;/table&gt;</Description>
                <InputSpec xml:space="preserve">你的程序需要从标准输入设备（通常为键盘）中读入多组测试数据。每组输入数据占一行，其中只包含一个整数n（0 &amp;le; n &amp;le; 9）。在行首和行尾没有多余的空格；所有数据前后没有多余的空行；两组数据之间没有多余的空行。
在最后一组测试数据之后，有一个整数-1，表示输入数据的结尾。</InputSpec>
                <OutputSpec xml:space="preserve">对每组测试数据，你的程序需要向标准输出设备（通常为启动该程序的文本终端，例如你在Windows中启动该程序所用的命令行终端）依次输出一组对应的答案。每组答案占一行，其中只包含一个字符串，即题问描述中n对应的英文名称，首字母大写，其余字母小写。在行首和行尾不要输出多余的空格；在所有数据的前后不要输出多余的空行；在两组数据之间不要输出多余的空行。</OutputSpec>
            </Problem>
            <TestData>
                <TimeLimit>1</TimeLimit>
                <InputFile />
                <OutputFile />
                <InputFormat inputType="zero">
                    <Terminator xml:space="preserve">-1</Terminator>
                    <Seperator xml:space="preserve" layout="bottom" />
                </InputFormat>
                <OutputFormat>
                    <Header xml:space="preserve" />
                    <Footer xml:space="preserve" />
                    <Seperator xml:space="preserve" layout="bottom" />
                </OutputFormat>
                <TestCase difficulty="sample">
                    <TestInput xml:space="preserve">0
</TestInput>
                    <TestOutput xml:space="preserve">Zero
</TestOutput>
                </TestCase>
                <TestCase difficulty="trivial">
                    <TestInput xml:space="preserve">1
</TestInput>
                    <TestOutput xml:space="preserve">One
</TestOutput>
                </TestCase>
                <TestCase difficulty="trivial">
                    <TestInput xml:space="preserve">2
</TestInput>
                    <TestOutput xml:space="preserve">Two
</TestOutput>
                </TestCase>
                <TestCase difficulty="sample">
                    <TestInput xml:space="preserve">3
</TestInput>
                    <TestOutput xml:space="preserve">Three
</TestOutput>
                </TestCase>
                <TestCase difficulty="trivial">
                    <TestInput xml:space="preserve">4
</TestInput>
                    <TestOutput xml:space="preserve">Four
</TestOutput>
                </TestCase>
                <TestCase difficulty="trivial">
                    <TestInput xml:space="preserve">5
</TestInput>
                    <TestOutput xml:space="preserve">Five
</TestOutput>
                </TestCase>
                <TestCase difficulty="trivial">
                    <TestInput xml:space="preserve">6
</TestInput>
                    <TestOutput xml:space="preserve">Six
</TestOutput>
                </TestCase>
                <TestCase difficulty="trivial">
                    <TestInput xml:space="preserve">7
</TestInput>
                    <TestOutput xml:space="preserve">Seven
</TestOutput>
                </TestCase>
                <TestCase difficulty="trivial">
                    <TestInput xml:space="preserve">8
</TestInput>
                    <TestOutput xml:space="preserve">Eight
</TestOutput>
                </TestCase>
                <TestCase difficulty="special">
                    <TestInput xml:space="preserve">9
</TestInput>
                    <TestOutput xml:space="preserve">Nine
</TestOutput>
                </TestCase>
            </TestData>
            <Solution xml:space="preserve" language="cpp" filename="061.cpp">#include &lt;iostream&gt;

using namespace std;

int main() {
    int n;
    cin &gt;&gt; n;
    while (-1 != n) {
        switch (n) {
            case 0: cout &lt;&lt; "Zero" &lt;&lt; endl;  break;
            case 1: cout &lt;&lt; "One" &lt;&lt; endl;  break;
            case 2: cout &lt;&lt; "Two" &lt;&lt; endl;  break;
            case 3: cout &lt;&lt; "Three" &lt;&lt; endl;  break;
            case 4: cout &lt;&lt; "Four" &lt;&lt; endl;  break;
            case 5: cout &lt;&lt; "Five" &lt;&lt; endl;  break;
            case 6: cout &lt;&lt; "Six" &lt;&lt; endl;  break;
            case 7: cout &lt;&lt; "Seven" &lt;&lt; endl;  break;
            case 8: cout &lt;&lt; "Eight" &lt;&lt; endl;  break;
            case 9: cout &lt;&lt; "Nine" &lt;&lt; endl;  break;
        }
        cin &gt;&gt; n;
    }
    return 0;
}
</Solution>
        </ProblemArchive>
        <ProblemArchive version="1.0" checked="true">
            <Title>Problem 34 min</Title>
            <Author>孙辞海</Author>
            <Problem contentType="html">
                <Description xml:space="preserve">输出两个整数中较小的那个数。</Description>
                <InputSpec xml:space="preserve">你的程序需要从标准输入设备（通常为键盘）中读入多组测试数据。每组输入数据占一行，每行包括两个整数，它们以空格分隔，在行首和行尾没有多余的空格，两个数的绝对值不大于2&lt;SUP&gt;60&lt;/SUP&gt;。</InputSpec>
                <OutputSpec xml:space="preserve">对每组测试数据，你的程序需要向标准输出设备（通常为启动该程序的文本终端，例如你在Windows中启动该程序所用的命令行终端）依次输出一组对应的答案。每组答案占一行，输出两个数中较小的整数，两数相等时输出其中任意一个即可。所有输出数据前后没有多余的空格，两组数据之间也没有多余的空行。</OutputSpec>
            </Problem>
            <TestData>
                <TimeLimit>1</TimeLimit>
                <InputFile />
                <OutputFile />
                <InputFormat inputType="eof">
                    <Terminator xml:space="preserve" />
                    <Seperator xml:space="preserve" layout="bottom" />
                </InputFormat>
                <OutputFormat>
                    <Header xml:space="preserve" />
                    <Footer xml:space="preserve" />
                    <Seperator xml:space="preserve" layout="bottom" />
                </OutputFormat>
                <TestCase difficulty="sample">
                    <TestInput xml:space="preserve">1 1
</TestInput>
                    <TestOutput xml:space="preserve">1
</TestOutput>
                </TestCase>
                <TestCase difficulty="special">
                    <TestInput xml:space="preserve">1152921504606846976 -1152921504606846976
</TestInput>
                    <TestOutput xml:space="preserve">-1152921504606846976
</TestOutput>
                </TestCase>
                <TestCase difficulty="sample">
                    <TestInput xml:space="preserve">3 4
</TestInput>
                    <TestOutput xml:space="preserve">3
</TestOutput>
                </TestCase>
                <TestCase difficulty="trivial">
                    <TestInput xml:space="preserve">1152921504606846976 1152921504606846976
</TestInput>
                    <TestOutput xml:space="preserve">1152921504606846976
</TestOutput>
                </TestCase>
                <TestCase difficulty="trivial">
                    <TestInput xml:space="preserve">1152921504606846976 1152921504606846976
</TestInput>
                    <TestOutput xml:space="preserve">1152921504606846976
</TestOutput>
                </TestCase>
                <TestCase difficulty="trivial">
                    <TestInput xml:space="preserve">1152921504606846976 1152921504606846976
</TestInput>
                    <TestOutput xml:space="preserve">1152921504606846976
</TestOutput>
                </TestCase>
                <TestCase difficulty="trivial">
                    <TestInput xml:space="preserve">1152921504606846976 1152921504606846976
</TestInput>
                    <TestOutput xml:space="preserve">1152921504606846976
</TestOutput>
                </TestCase>
                <TestCase difficulty="trivial">
                    <TestInput xml:space="preserve">0 0
</TestInput>
                    <TestOutput xml:space="preserve">0
</TestOutput>
                </TestCase>
                <TestCase difficulty="special">
                    <TestInput xml:space="preserve">-1152921504606846976 -1152921504606846976
</TestInput>
                    <TestOutput xml:space="preserve">-1152921504606846976
</TestOutput>
                </TestCase>
                <TestCase difficulty="special">
                    <TestInput xml:space="preserve">-1152921504606846976 -1152921504606846976
</TestInput>
                    <TestOutput xml:space="preserve">-1152921504606846976
</TestOutput>
                </TestCase>
            </TestData>
            <Solution xml:space="preserve" language="cpp" filename="min">#include&lt;iostream&gt;
using namespace std;
int main()
{
	long long a,b;
	while(cin&gt;&gt;a&gt;&gt;b)
		cout&lt;&lt;(a&lt;b? a:b)&lt;&lt;endl;
	return 0;
}
	</Solution>
        </ProblemArchive>
        <ProblemArchive version="1.0" checked="true">
            <Title>Problem 35 实数运算</Title>
            <Author>孙辞海</Author>
            <Problem contentType="plain">
                <Description xml:space="preserve">求两个实数的和，差，积，商。</Description>
                <InputSpec xml:space="preserve">你的程序需要从标准输入设备（通常为键盘）中读入多组测试数据。每组输入数据由两行组成：第一行为两个实数a、b，它们以空格分隔，在行首和行尾没有多余的空格；第二行为运算符号'+'、'-'、'*'、'/'之一，在行首和行尾没有多余的空格。输入a、b均为0时结束。</InputSpec>
                <OutputSpec xml:space="preserve">对每组测试数据，你的程序需要向标准输出设备（通常为启动该程序的文本终端，例如你在Windows中启动该程序所用的命令行终端）依次输出从标准输入设备中读入的每一组测试数据对应的结果，所有数据前后没有多余的空格，两组数据之间也没有多余的空行。输出一行a与b的对应的运算结果(保留一位小数)，当除数为0时输出'Wrong!'，a、b均为0时无需处理。</OutputSpec>
            </Problem>
            <TestData>
                <TimeLimit>1</TimeLimit>
                <InputFile />
                <OutputFile />
                <InputFormat inputType="zero">
                    <Terminator xml:space="preserve">0 0
</Terminator>
                    <Seperator xml:space="preserve" layout="bottom" />
                </InputFormat>
                <OutputFormat>
                    <Header xml:space="preserve" />
                    <Footer xml:space="preserve" />
                    <Seperator xml:space="preserve" layout="bottom" />
                </OutputFormat>
                <TestCase difficulty="sample">
                    <TestInput xml:space="preserve">0.5 1.3
+
</TestInput>
                    <TestOutput xml:space="preserve">1.8
</TestOutput>
                </TestCase>
                <TestCase difficulty="trivial">
                    <TestInput xml:space="preserve">1.3 0.5
-
</TestInput>
                    <TestOutput xml:space="preserve">0.8
</TestOutput>
                </TestCase>
                <TestCase difficulty="trivial">
                    <TestInput xml:space="preserve">0.5 1.3
-
</TestInput>
                    <TestOutput xml:space="preserve">-0.8
</TestOutput>
                </TestCase>
                <TestCase difficulty="special">
                    <TestInput xml:space="preserve">1.3 0
*
</TestInput>
                    <TestOutput xml:space="preserve">0.0
</TestOutput>
                </TestCase>
                <TestCase difficulty="special">
                    <TestInput xml:space="preserve">0.3 0.5
*
</TestInput>
                    <TestOutput xml:space="preserve">0.1
</TestOutput>
                </TestCase>
                <TestCase difficulty="trivial">
                    <TestInput xml:space="preserve">1.3 0.5
*
</TestInput>
                    <TestOutput xml:space="preserve">0.7
</TestOutput>
                </TestCase>
                <TestCase difficulty="sample">
                    <TestInput xml:space="preserve">1.3 0
/
</TestInput>
                    <TestOutput xml:space="preserve">Wrong!
</TestOutput>
                </TestCase>
                <TestCase difficulty="special">
                    <TestInput xml:space="preserve">2.4 1.2
/
</TestInput>
                    <TestOutput xml:space="preserve">2.0
</TestOutput>
                </TestCase>
                <TestCase difficulty="special">
                    <TestInput xml:space="preserve">2.4 0
/
</TestInput>
                    <TestOutput xml:space="preserve">Wrong!
</TestOutput>
                </TestCase>
            </TestData>
            <Solution xml:space="preserve" language="cpp" filename="example4_7">#include&lt;iostream&gt;
#include&lt;cstdio&gt;
#include&lt;cmath&gt;

using namespace std;

bool EqualsToZero(double d)
{
	return (fabs(d)&lt;1e-10);
}

int main()
{
	double a,b;
	char ope;
	while(cin&gt;&gt;a&gt;&gt;b)
	{
		if (EqualsToZero(a)&amp;&amp; EqualsToZero(b))
		break;
		cin&gt;&gt;ope;
		
		switch(ope)
		{
			case '+':printf("%.1lf\n",a+b);break;
			case '-':printf("%.1lf\n",a-b);break;
			case '*':printf("%.1lf\n",a*b);break;
			case '/':if (EqualsToZero(b)) printf("Wrong!\n");else printf("%.1lf\n",a/b); break;
		}
	}
	return 0;
}
</Solution>
        </ProblemArchive>
        <ProblemArchive version="1.0" checked="true">
            <Title>Problem 36 你的成绩如何？</Title>
            <Author>孙辞海</Author>
            <Problem contentType="html">
                <Description xml:space="preserve">根据学生的成绩给予对应的等第，对应的关系如下表所示。&lt;p&gt;
成绩&amp;nbsp;		等第&lt;p&gt;
90－100	        A&lt;p&gt;
80－89	&amp;nbsp;	B&lt;p&gt;
60－79		&amp;nbsp;C&lt;p&gt;
60以下		&amp;nbsp;D&lt;p&gt;</Description>
                <InputSpec xml:space="preserve">你的程序需要从标准输入设备（通常为键盘）中读入多组测试数据。每组输入数据占一行，每行输入一个整数s(0≤s≤100)作为学生的成绩，在行首和行尾没有多余的空格。输入-1表示结束。</InputSpec>
                <OutputSpec xml:space="preserve">对每组测试数据，你的程序需要向标准输出设备（通常为启动该程序的文本终端，例如你在Windows中启动该程序所用的命令行终端）依次输出从标准输入设备中读入的每一组测试数据对应的结果，所有数据前后没有多余的空行，两组数据之间也没有多余的空行。每组输出数据由一行组成，每行由一个数组成，在行首和行尾没有多余的空格。</OutputSpec>
            </Problem>
            <TestData>
                <TimeLimit>1</TimeLimit>
                <InputFile />
                <OutputFile />
                <InputFormat inputType="zero">
                    <Terminator xml:space="preserve">-1</Terminator>
                    <Seperator xml:space="preserve" layout="bottom" />
                </InputFormat>
                <OutputFormat>
                    <Header xml:space="preserve" />
                    <Footer xml:space="preserve" />
                    <Seperator xml:space="preserve" layout="bottom" />
                </OutputFormat>
                <TestCase difficulty="sample">
                    <TestInput xml:space="preserve">95
</TestInput>
                    <TestOutput xml:space="preserve">A
</TestOutput>
                </TestCase>
                <TestCase difficulty="trivial">
                    <TestInput xml:space="preserve">79
</TestInput>
                    <TestOutput xml:space="preserve">C
</TestOutput>
                </TestCase>
                <TestCase difficulty="trivial">
                    <TestInput xml:space="preserve">60
</TestInput>
                    <TestOutput xml:space="preserve">C
</TestOutput>
                </TestCase>
                <TestCase difficulty="sample">
                    <TestInput xml:space="preserve">20
</TestInput>
                    <TestOutput xml:space="preserve">D
</TestOutput>
                </TestCase>
                <TestCase difficulty="special">
                    <TestInput xml:space="preserve">0
</TestInput>
                    <TestOutput xml:space="preserve">D
</TestOutput>
                </TestCase>
                <TestCase difficulty="trivial">
                    <TestInput xml:space="preserve">100
</TestInput>
                    <TestOutput xml:space="preserve">A
</TestOutput>
                </TestCase>
                <TestCase difficulty="trivial">
                    <TestInput xml:space="preserve">60
</TestInput>
                    <TestOutput xml:space="preserve">C
</TestOutput>
                </TestCase>
                <TestCase difficulty="trivial">
                    <TestInput xml:space="preserve">61
</TestInput>
                    <TestOutput xml:space="preserve">C
</TestOutput>
                </TestCase>
                <TestCase difficulty="trivial">
                    <TestInput xml:space="preserve">59
</TestInput>
                    <TestOutput xml:space="preserve">D
</TestOutput>
                </TestCase>
                <TestCase difficulty="trivial">
                    <TestInput xml:space="preserve">89
</TestInput>
                    <TestOutput xml:space="preserve">B
</TestOutput>
                </TestCase>
            </TestData>
            <Solution xml:space="preserve" language="cpp" filename="064">#include&lt;iostream&gt;

using namespace std;

int main()
{
	int n;
	while(cin&gt;&gt;n)
	{
		if(n==-1) break;
		switch(n/10)
		{
			case 10:
			case 9: cout&lt;&lt;"A"&lt;&lt;endl;break;
			case 8: cout&lt;&lt;"B"&lt;&lt;endl;break;
			case 7:
			case 6: cout&lt;&lt;"C"&lt;&lt;endl;break;
			default: cout&lt;&lt;"D"&lt;&lt;endl;break;
		}
	}
	return 0;
}</Solution>
        </ProblemArchive>
    </ProblemList>
</PaperSetter>

